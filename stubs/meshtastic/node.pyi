from _typeshed import Incomplete
from meshtastic.protobuf import admin_pb2 as admin_pb2, apponly_pb2 as apponly_pb2, channel_pb2 as channel_pb2, localonly_pb2 as localonly_pb2, mesh_pb2 as mesh_pb2, portnums_pb2 as portnums_pb2
from meshtastic.util import Timeout as Timeout, camel_to_snake as camel_to_snake, fromPSK as fromPSK, message_to_json as message_to_json, our_exit as our_exit, pskToString as pskToString, stripnl as stripnl

class Node:
    iface: Incomplete
    nodeNum: Incomplete
    localConfig: Incomplete
    moduleConfig: Incomplete
    channels: Incomplete
    partialChannels: list | None
    noProto: Incomplete
    cannedPluginMessage: Incomplete
    cannedPluginMessageMessages: Incomplete
    ringtone: Incomplete
    ringtonePart: Incomplete
    gotResponse: Incomplete
    def __init__(self, iface, nodeNum, noProto: bool = False, timeout: int = 300) -> None: ...
    def showChannels(self) -> None: ...
    def showInfo(self) -> None: ...
    def setChannels(self, channels) -> None: ...
    def requestChannels(self, startingIndex: int = 0): ...
    def onResponseRequestSettings(self, p) -> None: ...
    def requestConfig(self, configType) -> None: ...
    def turnOffEncryptionOnPrimaryChannel(self) -> None: ...
    def waitForConfig(self, attribute: str = 'channels'): ...
    def writeConfig(self, config_name) -> None: ...
    def writeChannel(self, channelIndex, adminIndex: int = 0) -> None: ...
    def getChannelByChannelIndex(self, channelIndex): ...
    def deleteChannel(self, channelIndex) -> None: ...
    def getChannelByName(self, name): ...
    def getDisabledChannel(self): ...
    def setOwner(self, long_name: str | None = None, short_name: str | None = None, is_licensed: bool = False): ...
    def getURL(self, includeAll: bool = True): ...
    def setURL(self, url: str, addOnly: bool = False): ...
    def onResponseRequestRingtone(self, p) -> None: ...
    def get_ringtone(self): ...
    def set_ringtone(self, ringtone): ...
    def onResponseRequestCannedMessagePluginMessageMessages(self, p) -> None: ...
    def get_canned_message(self): ...
    def set_canned_message(self, message): ...
    def exitSimulator(self): ...
    def reboot(self, secs: int = 10): ...
    def beginSettingsTransaction(self): ...
    def commitSettingsTransaction(self): ...
    def rebootOTA(self, secs: int = 10): ...
    def enterDFUMode(self): ...
    def shutdown(self, secs: int = 10): ...
    def getMetadata(self) -> None: ...
    def factoryReset(self, full: bool = False): ...
    def removeNode(self, nodeId: int | str): ...
    def setFavorite(self, nodeId: int | str): ...
    def removeFavorite(self, nodeId: int | str): ...
    def setIgnored(self, nodeId: int | str): ...
    def removeIgnored(self, nodeId: int | str): ...
    def resetNodeDb(self): ...
    def setFixedPosition(self, lat: int | float, lon: int | float, alt: int): ...
    def removeFixedPosition(self): ...
    def setTime(self, timeSec: int = 0): ...
    def onRequestGetMetadata(self, p) -> None: ...
    def onResponseRequestChannel(self, p) -> None: ...
    def onAckNak(self, p) -> None: ...
    def ensureSessionKey(self) -> None: ...
